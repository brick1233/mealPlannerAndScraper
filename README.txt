I started this project with the intention of improving my ability to code in python ie) remembering the tricks and general programming approaches. I also was trying to incorporate unit testing, CI, and general good practice. Needless to say, I neglected the second half of my goal (at least I'm including a readme?).
This project has two main components, a web scraper and a meal planner. The meals are selected from a pool of user entered recipes and recipes scraped from the internet. The web scraper is currently configured with the tags/html keys that can target the sites AllRecipes and AFamilyFeast (although some recipes are buggy, and the tags/attributes/ids may be outdated now). Additionally, the scraper is for demonstration purposes only, make sure you read their terms and conditions.
To scrape recipes, paste the urls into the document scrapedRecipes/recipeURLS.txt followed by a newline. Then run the web scraper program found in webscraper_program/recipeWebScrapper.py file. The scraped recipes should appear in a directory titled with the date within the scrapedRecipes directory.
To generate meal plans based on a user provided number of days simply run the file, mealPlanner_program/mealPlanner_program.py. Meal plans, along with their shopping lists, should be written to HTML files in dated directories in the mealPlans directory.
Users may add their own recipes following the format of the recipes that are included with this repo. Note, scraped recipes follow a different format but both will work with the meal planner. Additionally you SHOULD ENSURE THE WD DIRECTORY IS SET CORRECTLY IN THE PROGRAMS.
Hopefully this program helps you maintain a more colorful diet, or improves your cooking/planning experience. 
